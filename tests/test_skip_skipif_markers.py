import pytest

# есть стандартные маркировки, которые использует pytest. 
# Это существующие в библиотеке декораторы, содержащие конкретные инструкции.

@pytest.mark.skip(reason="фича в разработке") # skip - пропустить тест по причине reason=. 
# Используется для осознанного пропуска тестов, 
# которые будут падать под влиянием внешних факторов: среда, неготовность функционала, отключение функционала...
# обязательно указывать причину скипа в аргументе параметра reason=
def test_feature_in_development():
    pass


@pytest.mark.skip(reason="фича в разработке") # любой маркер действует по принципу: родитель => дочерний,
# а значит будет присваиваться каждому из методов класса.
class TestSuiteSkip:
    def test_future_in_development_1():
        pass
    
    @pytest.mark.ui # какими бы не были остальные маркеры, наличие скип будет вызывать пропуск теста.
    def test_future_in_development_2():
        pass


SYSTEM_VERSION = "v1.3.0" # системная константа, содержащая строку

# если тест необходимо пропустить только при определённых условиях, используется skipif.
# для этого указывается обязательный condition=, который принимает логическое выражение и на основе результата:
# True - пропускает или False - не пропускает тест.
@pytest.mark.skipif(
    condition=SYSTEM_VERSION == "v1.3.0",
    reason=f"Тест неактуален для версии: {SYSTEM_VERSION} ",
) # этот тест будет пропущен
def test_system_version_valid():
    pass


@pytest.mark.skipif(
    condition=SYSTEM_VERSION == "v1.2.0",
    reason=f"Тест неактуален для версии: {SYSTEM_VERSION}",
) # этот тест будет выполнен
def test_system_version_invalid():
    pass
